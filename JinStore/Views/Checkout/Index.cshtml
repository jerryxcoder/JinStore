@using JinStore.Models
@model CheckoutModel
@{
    ViewBag.Title = "Checkout";
    List<SelectListItem> months = new List<SelectListItem>();
    for (int i = 1; i <= 12; i++)
    {
        months.Add(new SelectListItem { Text = i.ToString().PadLeft(2, '0'), Value = i.ToString() });
    }

    List<SelectListItem> years = new List<SelectListItem>();
    for (DateTime d = DateTime.Now; d < DateTime.Now.AddYears(5); d = d.AddYears(1))
    {
        years.Add(new SelectListItem()
        {
            Text = d.Year.ToString(),
            Value = d.Year.ToString()
        });
    }

    var states = new List<SelectListItem> {
                    new SelectListItem { Value = "AL", Text = "Alabama" },
                    new SelectListItem { Value = "AK", Text = "Alaska" },
                    new SelectListItem { Value = "AZ", Text = "Arizona" },
                    new SelectListItem { Value = "AR", Text = "Arkansas" },
                    new SelectListItem { Value = "CA", Text = "California" },
                    new SelectListItem { Value = "CO", Text = "Colorado" },
                    new SelectListItem { Value = "CT", Text = "Connecticut" },
                    new SelectListItem { Value = "DE", Text = "Delaware" },
                    new SelectListItem { Value = "FL", Text = "Florida" },
                    new SelectListItem { Value = "GA", Text = "Georgia" },
                    new SelectListItem { Value = "HI", Text = "Hawaii" },
                    new SelectListItem { Value = "ID", Text = "Idaho" },
                    new SelectListItem { Value = "IL", Text = "Illinois" },
                    new SelectListItem { Value = "IN", Text = "Indiana" },
                    new SelectListItem { Value = "IA", Text = "Iowa" },
                    new SelectListItem { Value = "KS", Text = "Kansas" },
                    new SelectListItem { Value = "KY", Text = "Kentucky" },
                    new SelectListItem { Value = "LA", Text = "Louisiana" },
                    new SelectListItem { Value = "ME", Text = "Maine" },
                    new SelectListItem { Value = "MD", Text = "Maryland" },
                    new SelectListItem { Value = "MA", Text = "Massachusetts" },
                    new SelectListItem { Value = "MI", Text = "Michigan" },
                    new SelectListItem { Value = "MN", Text = "Minnesota" },
                    new SelectListItem { Value = "MS", Text = "Mississippi" },
                    new SelectListItem { Value = "MO", Text = "Missouri" },
                    new SelectListItem { Value = "MT", Text = "Montana" },
                    new SelectListItem { Value = "NC", Text = "North Carolina" },
                    new SelectListItem { Value = "ND", Text = "North Dakota" },
                    new SelectListItem { Value = "NE", Text = "Nebraska" },
                    new SelectListItem { Value = "NV", Text = "Nevada" },
                    new SelectListItem { Value = "NH", Text = "New Hampshire" },
                    new SelectListItem { Value = "NJ", Text = "New Jersey" },
                    new SelectListItem { Value = "NM", Text = "New Mexico" },
                    new SelectListItem { Value = "NY", Text = "New York" },
                    new SelectListItem { Value = "OH", Text = "Ohio" },
                    new SelectListItem { Value = "OK", Text = "Oklahoma" },
                    new SelectListItem { Value = "OR", Text = "Oregon" },
                    new SelectListItem { Value = "PA", Text = "Pennsylvania" },
                    new SelectListItem { Value = "RI", Text = "Rhode Island" },
                    new SelectListItem { Value = "SC", Text = "South Carolina" },
                    new SelectListItem { Value = "SD", Text = "South Dakota" },
                    new SelectListItem { Value = "TN", Text = "Tennessee" },
                    new SelectListItem { Value = "TX", Text = "Texas" },
                    new SelectListItem { Value = "UT", Text = "Utah" },
                    new SelectListItem { Value = "VT", Text = "Vermont" },
                    new SelectListItem { Value = "VA", Text = "Virginia" },
                    new SelectListItem { Value = "WA", Text = "Washington" },
                    new SelectListItem { Value = "WV", Text = "West Virginia" },
                    new SelectListItem { Value = "WI", Text = "Wisconsin" },
                    new SelectListItem { Value = "WY", Text = "Wyoming" }
                }.ToArray();
}
<head>
    <style>
        .wellCustom {
            min-height: 20px;
            padding: 0px;
            margin-bottom: 20px;
            background-color: #f5f5f5;
            border: 1px solid #e3e3e3;
            border-radius: 4px;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .05);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .05);
        }
    </style>
</head>
<div class="jumbotron container body-content">
    <h2>Checkout</h2>
    <div class="wellCustom">
        <table class="table">
            <tr>
                <td>
                   Origin
                </td>
                <td>
                   Destination
                </td>
                <td>
                   Departure Time
                </td>
                <td>
                   Arrival Time
                </td>
                <td>
                    Stops
                </td>
                <td>
                   Total
                </td>
            </tr>
                <tr>
                    <td>
                        @Model.origin
                        @Html.HiddenFor(x => x.origin)
                    </td>
                    <td>
                        @Model.destination
                        @Html.HiddenFor(x => x.destination)
                    </td>
                    <td>
                        @Model.departureTime
                        @Html.HiddenFor(x => x.departureTime)
                    </td>
                    <td>
                        @Model.arrivalTime
                        @Html.HiddenFor(x => x.arrivalTime)
                    </td>
                    <td>
                        @Model.stops
                        @Html.HiddenFor(x => x.stops)
                    </td>
                    <td>
                        @Model.saleTotal
                        @Html.HiddenFor(x => x.saleTotal)
                    </td>
                </tr>
        </table>
    </div>
    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-md-4">
                <h2>Contact Info</h2>
                @Html.AntiForgeryToken()

                
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName)
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName)
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.EmailAddress)
                    @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.EmailAddress)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumber)
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber)
                </div>
            </div>
            <div class="col-md-4">
                <h2>Payment Infomation</h2>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreditCardNumber)
                    @Html.TextBoxFor(m => m.CreditCardNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CreditCardNumber)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreditCardVerificationValue)
                    @Html.TextBoxFor(m => m.CreditCardVerificationValue, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CreditCardVerificationValue)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreditCardName)
                    @Html.TextBoxFor(m => m.CreditCardName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CreditCardName)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CreditCardExpirationMonth)
                    <div class="form-inline">
                        @Html.DropDownListFor(m => m.CreditCardExpirationMonth, months, new { @class = "form-control" })
                        @Html.DropDownListFor(m => m.CreditCardExpirationYear, years, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CreditCardExpirationMonth)
                        @Html.ValidationMessageFor(m => m.CreditCardExpirationYear)
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <h2>Billing Information</h2>
                <div class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingStreet1)
                        @Html.TextBoxFor(m => m.BillingStreet1, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BillingStreet1)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingStreet2)
                        @Html.TextBoxFor(m => m.BillingStreet2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BillingStreet2)

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingCity)
                        @Html.TextBoxFor(m => m.BillingCity, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BillingCity)

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingState)
                        @Html.DropDownListFor(m => m.BillingState, states, new { @class = "form-control" })
                    </div>
                    @Html.ValidationMessageFor(m => m.BillingState)

                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingPostalCode)
                        @Html.TextBoxFor(m => m.BillingPostalCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BillingPostalCode)

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.BillingReceipient)
                        @Html.TextBoxFor(m => m.BillingReceipient, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BillingReceipient)
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(m => m.id)
        <input type="submit" value="Submit Order" class="btn btn-primary" />
    }
    </div>
    @section scripts{
        <script>
            $(document).ready(function () {
                $('.input-validation-error').parents('.form-group').addClass('has-error');
                $('.field-validation-error').addClass('text-danger');
            });
        </script>
    }
